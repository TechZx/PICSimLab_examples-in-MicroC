;  ASM code generated by mikroVirtualMachine for PIC - V. 8.0.0.0
;  Date/Time: 21-Jun-20 6:05:00 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF96	F000			GOTO	_main
$0008	$	_read_keypad:
;part2.c,4 :: 			char  read_keypad()
;part2.c,7 :: 			PORTD = 0xFF;
$0008	$0EFF	    			MOVLW	255
$000A	$6E83	    			MOVWF	PORTD, 0
;part2.c,8 :: 			TRISD = 0xFF;    //configure PORT D as input
$000C	$0EFF	    			MOVLW	255
$000E	$6E95	    			MOVWF	TRISD, 0
;part2.c,9 :: 			TRISB = 0x00;     //configure PORT B as output
$0010	$6A93	    			CLRF	TRISB, 0
;part2.c,10 :: 			PORTB = 0xFF;     //set all pins of PORT B to 1;
$0012	$0EFF	    			MOVLW	255
$0014	$6E81	    			MOVWF	PORTB, 0
;part2.c,12 :: 			key =0;
$0016	$6A17	    			CLRF	read_keypad_key_L0, 0
;part2.c,13 :: 			do {                       //1-5 buttons
$0018	$	L_read_keypad_0:
;part2.c,15 :: 			PORTB.F0 = 0;
$0018	$9081	    			BCF	PORTB, 0, 0
;part2.c,16 :: 			delay_ms(10);
$001A	$0E1A	    			MOVLW	26
$001C	$6E0B	    			MOVWF	STACK_11, 0
$001E	$0EFF	    			MOVLW	255
$0020	$6E0A	    			MOVWF	STACK_10, 0
$0022	$2E0B	    			DECFSZ	STACK_11, F, 0
$0024	$D001	    			BRA	$+2
$0026	$D003	    			BRA	$+4
$0028	$2E0A	    			DECFSZ	STACK_10, F, 0
$002A	$D7FE	    			BRA	$-1
$002C	$D7FA	    			BRA	$-5
$002E	$0EE7	    			MOVLW	231
$0030	$6E0A	    			MOVWF	STACK_10, 0
$0032	$2E0A	    			DECFSZ	STACK_10, F, 0
$0034	$D7FE	    			BRA	$-1
$0036	$0000	    			NOP
;part2.c,17 :: 			var = PORTD;
$0038	$CF83	F016			MOVFF	PORTD, read_keypad_var_L0
;part2.c,19 :: 			if (var.F2 == 0) key = '4';
$003C	$6A01	    			CLRF	STACK_1, 0
$003E	$B416	    			BTFSC	read_keypad_var_L0, 2, 0
$0040	$2A01	    			INCF	STACK_1, 1, 0
$0042	$5001	    			MOVF	STACK_1, 0, 0
$0044	$0A00	    			XORLW	0
$0046	$E103	    			BNZ	L_read_keypad_2
$0048	$0E34	    			MOVLW	52
$004A	$6E17	    			MOVWF	read_keypad_key_L0, 0
$004C	$D008	    			BRA	L_read_keypad_3
$004E	$	L_read_keypad_2:
;part2.c,20 :: 			else if (var.F3 == 0) key = '1';
$004E	$6A01	    			CLRF	STACK_1, 0
$0050	$B616	    			BTFSC	read_keypad_var_L0, 3, 0
$0052	$2A01	    			INCF	STACK_1, 1, 0
$0054	$5001	    			MOVF	STACK_1, 0, 0
$0056	$0A00	    			XORLW	0
$0058	$E102	    			BNZ	L_read_keypad_4
$005A	$0E31	    			MOVLW	49
$005C	$6E17	    			MOVWF	read_keypad_key_L0, 0
$005E	$	L_read_keypad_4:
$005E	$	L_read_keypad_3:
;part2.c,21 :: 			PORTB.F0 =1;
$005E	$8081	    			BSF	PORTB, 0, 0
;part2.c,24 :: 			PORTB.F1 = 0;
$0060	$9281	    			BCF	PORTB, 1, 0
;part2.c,25 :: 			delay_ms(10);
$0062	$0E1A	    			MOVLW	26
$0064	$6E0B	    			MOVWF	STACK_11, 0
$0066	$0EFF	    			MOVLW	255
$0068	$6E0A	    			MOVWF	STACK_10, 0
$006A	$2E0B	    			DECFSZ	STACK_11, F, 0
$006C	$D001	    			BRA	$+2
$006E	$D003	    			BRA	$+4
$0070	$2E0A	    			DECFSZ	STACK_10, F, 0
$0072	$D7FE	    			BRA	$-1
$0074	$D7FA	    			BRA	$-5
$0076	$0EE7	    			MOVLW	231
$0078	$6E0A	    			MOVWF	STACK_10, 0
$007A	$2E0A	    			DECFSZ	STACK_10, F, 0
$007C	$D7FE	    			BRA	$-1
$007E	$0000	    			NOP
;part2.c,26 :: 			var = PORTD;
$0080	$CF83	F016			MOVFF	PORTD, read_keypad_var_L0
;part2.c,28 :: 			if (var.F2 == 0)key = '5';
$0084	$6A01	    			CLRF	STACK_1, 0
$0086	$B416	    			BTFSC	read_keypad_var_L0, 2, 0
$0088	$2A01	    			INCF	STACK_1, 1, 0
$008A	$5001	    			MOVF	STACK_1, 0, 0
$008C	$0A00	    			XORLW	0
$008E	$E103	    			BNZ	L_read_keypad_5
$0090	$0E35	    			MOVLW	53
$0092	$6E17	    			MOVWF	read_keypad_key_L0, 0
$0094	$D008	    			BRA	L_read_keypad_6
$0096	$	L_read_keypad_5:
;part2.c,29 :: 			else if (var.F3 == 0)key = '2';
$0096	$6A01	    			CLRF	STACK_1, 0
$0098	$B616	    			BTFSC	read_keypad_var_L0, 3, 0
$009A	$2A01	    			INCF	STACK_1, 1, 0
$009C	$5001	    			MOVF	STACK_1, 0, 0
$009E	$0A00	    			XORLW	0
$00A0	$E102	    			BNZ	L_read_keypad_7
$00A2	$0E32	    			MOVLW	50
$00A4	$6E17	    			MOVWF	read_keypad_key_L0, 0
$00A6	$	L_read_keypad_7:
$00A6	$	L_read_keypad_6:
;part2.c,30 :: 			PORTB.F1 =1;
$00A6	$8281	    			BSF	PORTB, 1, 0
;part2.c,33 :: 			PORTB.F2 =0;
$00A8	$9481	    			BCF	PORTB, 2, 0
;part2.c,34 :: 			delay_ms(10);
$00AA	$0E1A	    			MOVLW	26
$00AC	$6E0B	    			MOVWF	STACK_11, 0
$00AE	$0EFF	    			MOVLW	255
$00B0	$6E0A	    			MOVWF	STACK_10, 0
$00B2	$2E0B	    			DECFSZ	STACK_11, F, 0
$00B4	$D001	    			BRA	$+2
$00B6	$D003	    			BRA	$+4
$00B8	$2E0A	    			DECFSZ	STACK_10, F, 0
$00BA	$D7FE	    			BRA	$-1
$00BC	$D7FA	    			BRA	$-5
$00BE	$0EE7	    			MOVLW	231
$00C0	$6E0A	    			MOVWF	STACK_10, 0
$00C2	$2E0A	    			DECFSZ	STACK_10, F, 0
$00C4	$D7FE	    			BRA	$-1
$00C6	$0000	    			NOP
;part2.c,35 :: 			var = PORTD;
$00C8	$CF83	F016			MOVFF	PORTD, read_keypad_var_L0
;part2.c,37 :: 			if (var.F3 == 0) key = '3';
$00CC	$6A01	    			CLRF	STACK_1, 0
$00CE	$B616	    			BTFSC	read_keypad_var_L0, 3, 0
$00D0	$2A01	    			INCF	STACK_1, 1, 0
$00D2	$5001	    			MOVF	STACK_1, 0, 0
$00D4	$0A00	    			XORLW	0
$00D6	$E102	    			BNZ	L_read_keypad_8
$00D8	$0E33	    			MOVLW	51
$00DA	$6E17	    			MOVWF	read_keypad_key_L0, 0
$00DC	$	L_read_keypad_8:
;part2.c,38 :: 			PORTB.F2 =1;
$00DC	$8481	    			BSF	PORTB, 2, 0
;part2.c,40 :: 			}while (key == 0);
$00DE	$5017	    			MOVF	read_keypad_key_L0, 0, 0
$00E0	$0A00	    			XORLW	0
$00E2	$E09A	    			BZ	L_read_keypad_0
$00E4	$	L_read_keypad_1:
;part2.c,42 :: 			return key;
$00E4	$C017	F000			MOVFF	read_keypad_key_L0, STACK_0
;part2.c,43 :: 			}
$00E8	$0012	    			RETURN
$00EA	$	_function_numbers:
;part2.c,45 :: 			unsigned char function_numbers(unsigned char v)
;part2.c,47 :: 			switch(v)
$00EA	$D00F	    			BRA	L_function_numbers_9
;part2.c,49 :: 			case 1:
$00EC	$	L_function_numbers_11:
;part2.c,50 :: 			return 0x06;
$00EC	$0E06	    			MOVLW	6
$00EE	$6E00	    			MOVWF	STACK_0, 0
$00F0	$0012	    			RETURN
;part2.c,51 :: 			case 2:
$00F2	$	L_function_numbers_12:
;part2.c,52 :: 			return 0x5B;
$00F2	$0E5B	    			MOVLW	91
$00F4	$6E00	    			MOVWF	STACK_0, 0
$00F6	$0012	    			RETURN
;part2.c,53 :: 			case 3:
$00F8	$	L_function_numbers_13:
;part2.c,54 :: 			return 0x4F;
$00F8	$0E4F	    			MOVLW	79
$00FA	$6E00	    			MOVWF	STACK_0, 0
$00FC	$0012	    			RETURN
;part2.c,55 :: 			case 4:
$00FE	$	L_function_numbers_14:
;part2.c,56 :: 			return 0x66;
$00FE	$0E66	    			MOVLW	102
$0100	$6E00	    			MOVWF	STACK_0, 0
$0102	$0012	    			RETURN
;part2.c,57 :: 			case 5:
$0104	$	L_function_numbers_15:
;part2.c,58 :: 			return 0x6D;
$0104	$0E6D	    			MOVLW	109
$0106	$6E00	    			MOVWF	STACK_0, 0
$0108	$0012	    			RETURN
;part2.c,60 :: 			}
$010A	$	L_function_numbers_9:
$010A	$5016	    			MOVF	FARG_function_numbers+0, 0, 0
$010C	$0A01	    			XORLW	1
$010E	$E0EE	    			BZ	L_function_numbers_11
$0110	$5016	    			MOVF	FARG_function_numbers+0, 0, 0
$0112	$0A02	    			XORLW	2
$0114	$E0EE	    			BZ	L_function_numbers_12
$0116	$5016	    			MOVF	FARG_function_numbers+0, 0, 0
$0118	$0A03	    			XORLW	3
$011A	$E0EE	    			BZ	L_function_numbers_13
$011C	$5016	    			MOVF	FARG_function_numbers+0, 0, 0
$011E	$0A04	    			XORLW	4
$0120	$E0EE	    			BZ	L_function_numbers_14
$0122	$5016	    			MOVF	FARG_function_numbers+0, 0, 0
$0124	$0A05	    			XORLW	5
$0126	$E0EE	    			BZ	L_function_numbers_15
$0128	$	L_function_numbers_10:
;part2.c,61 :: 			return 0;
$0128	$6A00	    			CLRF	STACK_0, 0
;part2.c,62 :: 			}
$012A	$0012	    			RETURN
$012C	$	_main:
;part2.c,65 :: 			void main()
;part2.c,70 :: 			keypressed = read_keypad();
$012C	$EC04	F000			CALL	_read_keypad
$0130	$C000	F015			MOVFF	STACK_0, main_keypressed_L0
;part2.c,71 :: 			TRISD = 0x00;  //Define PORTD to operate as outpout
$0134	$6A95	    			CLRF	TRISD, 0
;part2.c,72 :: 			TRISA = 0xFB;  // Define PORTA pin 2 as output.
$0136	$0EFB	    			MOVLW	251
$0138	$6E92	    			MOVWF	TRISA, 0
;part2.c,75 :: 			keypressed = keypressed - 0x30;
$013A	$0E30	    			MOVLW	48
$013C	$5E00	    			SUBWF	STACK_0, 1, 0
$013E	$C000	F015			MOVFF	STACK_0, main_keypressed_L0
;part2.c,76 :: 			PORTD = function_numbers(keypressed); //Write the appropriate combination of bits to PORTD
$0142	$C000	F016			MOVFF	STACK_0, FARG_function_numbers+0
$0146	$EC75	F000			CALL	_function_numbers
$014A	$C000	FF83			MOVFF	STACK_0, PORTD
;part2.c,79 :: 			switch (function_numbers(keypressed) )
$014E	$C015	F016			MOVFF	main_keypressed_L0, FARG_function_numbers+0
$0152	$EC75	F000			CALL	_function_numbers
$0156	$D056	    			BRA	L_main_16
;part2.c,81 :: 			case 0x5B :
$0158	$	L_main_18:
;part2.c,82 :: 			TRISB.F4 =0x00;    //initiating steper ports
$0158	$9893	    			BCF	TRISB, 4, 0
;part2.c,83 :: 			TRISB.F5 =0x00;      //sending 0 so they initialise again
$015A	$9A93	    			BCF	TRISB, 5, 0
;part2.c,84 :: 			TRISB.F6 =0x00;
$015C	$9C93	    			BCF	TRISB, 6, 0
;part2.c,85 :: 			TRISB.F7 =0x00;
$015E	$9E93	    			BCF	TRISB, 7, 0
;part2.c,86 :: 			PORTB=0x00;           // initialising port b
$0160	$6A81	    			CLRF	PORTB, 0
;part2.c,88 :: 			while(1)
$0162	$	L_main_19:
;part2.c,90 :: 			PORTB.F4 =0;
$0162	$9881	    			BCF	PORTB, 4, 0
;part2.c,91 :: 			PORTB.F5 =1;
$0164	$8A81	    			BSF	PORTB, 5, 0
;part2.c,92 :: 			PORTB.F6 =0;
$0166	$9C81	    			BCF	PORTB, 6, 0
;part2.c,93 :: 			PORTB.F7 =1;
$0168	$8E81	    			BSF	PORTB, 7, 0
;part2.c,94 :: 			delay_ms(3);   //3ms delay
$016A	$0E08	    			MOVLW	8
$016C	$6E0B	    			MOVWF	STACK_11, 0
$016E	$0EFF	    			MOVLW	255
$0170	$6E0A	    			MOVWF	STACK_10, 0
$0172	$2E0B	    			DECFSZ	STACK_11, F, 0
$0174	$D001	    			BRA	$+2
$0176	$D003	    			BRA	$+4
$0178	$2E0A	    			DECFSZ	STACK_10, F, 0
$017A	$D7FE	    			BRA	$-1
$017C	$D7FA	    			BRA	$-5
$017E	$0EC4	    			MOVLW	196
$0180	$6E0A	    			MOVWF	STACK_10, 0
$0182	$2E0A	    			DECFSZ	STACK_10, F, 0
$0184	$D7FE	    			BRA	$-1
$0186	$0000	    			NOP
$0188	$0000	    			NOP
;part2.c,96 :: 			PORTB.F4 =1;
$018A	$8881	    			BSF	PORTB, 4, 0
;part2.c,97 :: 			PORTB.F5 =0;
$018C	$9A81	    			BCF	PORTB, 5, 0
;part2.c,98 :: 			PORTB.F6 =0;
$018E	$9C81	    			BCF	PORTB, 6, 0
;part2.c,99 :: 			PORTB.F7 =1;
$0190	$8E81	    			BSF	PORTB, 7, 0
;part2.c,100 :: 			delay_ms(3);
$0192	$0E08	    			MOVLW	8
$0194	$6E0B	    			MOVWF	STACK_11, 0
$0196	$0EFF	    			MOVLW	255
$0198	$6E0A	    			MOVWF	STACK_10, 0
$019A	$2E0B	    			DECFSZ	STACK_11, F, 0
$019C	$D001	    			BRA	$+2
$019E	$D003	    			BRA	$+4
$01A0	$2E0A	    			DECFSZ	STACK_10, F, 0
$01A2	$D7FE	    			BRA	$-1
$01A4	$D7FA	    			BRA	$-5
$01A6	$0EC4	    			MOVLW	196
$01A8	$6E0A	    			MOVWF	STACK_10, 0
$01AA	$2E0A	    			DECFSZ	STACK_10, F, 0
$01AC	$D7FE	    			BRA	$-1
$01AE	$0000	    			NOP
$01B0	$0000	    			NOP
;part2.c,102 :: 			PORTB.F4 =1;
$01B2	$8881	    			BSF	PORTB, 4, 0
;part2.c,103 :: 			PORTB.F5 =0;
$01B4	$9A81	    			BCF	PORTB, 5, 0
;part2.c,104 :: 			PORTB.F6 =1;
$01B6	$8C81	    			BSF	PORTB, 6, 0
;part2.c,105 :: 			PORTB.F7 =0;
$01B8	$9E81	    			BCF	PORTB, 7, 0
;part2.c,106 :: 			delay_ms(3);
$01BA	$0E08	    			MOVLW	8
$01BC	$6E0B	    			MOVWF	STACK_11, 0
$01BE	$0EFF	    			MOVLW	255
$01C0	$6E0A	    			MOVWF	STACK_10, 0
$01C2	$2E0B	    			DECFSZ	STACK_11, F, 0
$01C4	$D001	    			BRA	$+2
$01C6	$D003	    			BRA	$+4
$01C8	$2E0A	    			DECFSZ	STACK_10, F, 0
$01CA	$D7FE	    			BRA	$-1
$01CC	$D7FA	    			BRA	$-5
$01CE	$0EC4	    			MOVLW	196
$01D0	$6E0A	    			MOVWF	STACK_10, 0
$01D2	$2E0A	    			DECFSZ	STACK_10, F, 0
$01D4	$D7FE	    			BRA	$-1
$01D6	$0000	    			NOP
$01D8	$0000	    			NOP
;part2.c,108 :: 			PORTB.F4 =0;
$01DA	$9881	    			BCF	PORTB, 4, 0
;part2.c,109 :: 			PORTB.F5 =1;
$01DC	$8A81	    			BSF	PORTB, 5, 0
;part2.c,110 :: 			PORTB.F6 =1;
$01DE	$8C81	    			BSF	PORTB, 6, 0
;part2.c,111 :: 			PORTB.F7 =0;
$01E0	$9E81	    			BCF	PORTB, 7, 0
;part2.c,112 :: 			delay_ms(3);
$01E2	$0E08	    			MOVLW	8
$01E4	$6E0B	    			MOVWF	STACK_11, 0
$01E6	$0EFF	    			MOVLW	255
$01E8	$6E0A	    			MOVWF	STACK_10, 0
$01EA	$2E0B	    			DECFSZ	STACK_11, F, 0
$01EC	$D001	    			BRA	$+2
$01EE	$D003	    			BRA	$+4
$01F0	$2E0A	    			DECFSZ	STACK_10, F, 0
$01F2	$D7FE	    			BRA	$-1
$01F4	$D7FA	    			BRA	$-5
$01F6	$0EC4	    			MOVLW	196
$01F8	$6E0A	    			MOVWF	STACK_10, 0
$01FA	$2E0A	    			DECFSZ	STACK_10, F, 0
$01FC	$D7FE	    			BRA	$-1
$01FE	$0000	    			NOP
$0200	$0000	    			NOP
;part2.c,113 :: 			}
$0202	$D7AF	    			BRA	L_main_19
;part2.c,114 :: 			}
$0204	$	L_main_16:
$0204	$5000	    			MOVF	STACK_0, 0, 0
$0206	$0A5B	    			XORLW	91
$0208	$E0A7	    			BZ	L_main_18
$020A	$	L_main_17:
;part2.c,115 :: 			}
$020A	$D7FF	    			BRA	$
